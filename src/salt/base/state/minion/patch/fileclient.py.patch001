586a587,600
>         # Also support token authorization using header
>         elif url_data.username is not None and url_data.scheme.startswith('https+'):
>             netloc = url_data.netloc
>             at_sign_pos = netloc.rfind('@')
>             if at_sign_pos != -1:
>                  netloc = netloc[at_sign_pos + 1:]
>             plus_sign_pos = url_data.scheme.rfind('+')
>             scheme = url_data.scheme[:plus_sign_pos]
>             auth_prefix = url_data.scheme[plus_sign_pos + 1:]
>             fixed_url = urlunparse(
>                 (scheme, netloc, url_data.path,
>                  url_data.params, url_data.query, url_data.fragment))
>             get_kwargs['header_dict'] = {'authorization': '{:} {:}'.format(
>                 auth_prefix, url_data.username)}
